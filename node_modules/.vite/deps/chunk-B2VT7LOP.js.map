{
  "version": 3,
  "sources": ["../../react-redux/es/components/Context.js", "../../react-redux/es/hooks/useStore.js", "../../react-redux/es/hooks/useReduxContext.js", "../../react-redux/es/hooks/useDispatch.js"],
  "sourcesContent": ["import React from 'react';\nexport const ReactReduxContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  ReactReduxContext.displayName = 'ReactRedux';\n}\n\nexport default ReactReduxContext;", "import { useContext } from 'react';\nimport { ReactReduxContext } from '../components/Context';\nimport { useReduxContext as useDefaultReduxContext } from './useReduxContext';\n/**\r\n * Hook factory, which creates a `useStore` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useStore` hook bound to the specified context.\r\n */\n\nexport function createStoreHook(context = ReactReduxContext) {\n  const useReduxContext = // @ts-ignore\n  context === ReactReduxContext ? useDefaultReduxContext : () => useContext(context);\n  return function useStore() {\n    const {\n      store\n    } = useReduxContext(); // @ts-ignore\n\n    return store;\n  };\n}\n/**\r\n * A hook to access the redux store.\r\n *\r\n * @returns {any} the redux store\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useStore } from 'react-redux'\r\n *\r\n * export const ExampleComponent = () => {\r\n *   const store = useStore()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\nexport const useStore = /*#__PURE__*/createStoreHook();", "import { useContext } from 'react';\nimport { ReactReduxContext } from '../components/Context';\n\n/**\r\n * A hook to access the value of the `ReactReduxContext`. This is a low-level\r\n * hook that you should usually not need to call directly.\r\n *\r\n * @returns {any} the value of the `ReactReduxContext`\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useReduxContext } from 'react-redux'\r\n *\r\n * export const CounterComponent = () => {\r\n *   const { store } = useReduxContext()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\nexport function useReduxContext() {\n  const contextValue = useContext(ReactReduxContext);\n\n  if (process.env.NODE_ENV !== 'production' && !contextValue) {\n    throw new Error('could not find react-redux context value; please ensure the component is wrapped in a <Provider>');\n  }\n\n  return contextValue;\n}", "import { ReactReduxContext } from '../components/Context';\nimport { useStore as useDefaultStore, createStoreHook } from './useStore';\n/**\r\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useDispatch` hook bound to the specified context.\r\n */\n\nexport function createDispatchHook(context = ReactReduxContext) {\n  const useStore = // @ts-ignore\n  context === ReactReduxContext ? useDefaultStore : createStoreHook(context);\n  return function useDispatch() {\n    const store = useStore(); // @ts-ignore\n\n    return store.dispatch;\n  };\n}\n/**\r\n * A hook to access the redux `dispatch` function.\r\n *\r\n * @returns {any|function} redux store's `dispatch` function\r\n *\r\n * @example\r\n *\r\n * import React, { useCallback } from 'react'\r\n * import { useDispatch } from 'react-redux'\r\n *\r\n * export const CounterComponent = ({ value }) => {\r\n *   const dispatch = useDispatch()\r\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\r\n *   return (\r\n *     <div>\r\n *       <span>{value}</span>\r\n *       <button onClick={increaseCounter}>Increase counter</button>\r\n *     </div>\r\n *   )\r\n * }\r\n */\n\nexport const useDispatch = /*#__PURE__*/createDispatchHook();"],
  "mappings": ";;;;;;;;AAAA,mBAAkB;AACX,IAAM,oBAAiC,aAAAA,QAAM,cAAc,IAAI;AAEtE,IAAI,MAAuC;AACzC,oBAAkB,cAAc;AAClC;;;ACLA,IAAAC,gBAA2B;;;ACA3B,IAAAC,gBAA2B;AAmBpB,SAAS,kBAAkB;AAChC,QAAM,mBAAe,0BAAW,iBAAiB;AAEjD,MAA6C,CAAC,cAAc;AAC1D,UAAM,IAAI,MAAM,kGAAkG;AAAA,EACpH;AAEA,SAAO;AACT;;;ADjBO,SAAS,gBAAgB,UAAU,mBAAmB;AAC3D,QAAMC,mBACN,YAAY,oBAAoB,kBAAyB,UAAM,0BAAW,OAAO;AACjF,SAAO,SAASC,YAAW;AACzB,UAAM;AAAA,MACJ;AAAA,IACF,IAAID,iBAAgB;AAEpB,WAAO;AAAA,EACT;AACF;AAiBO,IAAM,WAAwB,gBAAgB;;;AE5B9C,SAAS,mBAAmB,UAAU,mBAAmB;AAC9D,QAAME,YACN,YAAY,oBAAoB,WAAkB,gBAAgB,OAAO;AACzE,SAAO,SAASC,eAAc;AAC5B,UAAM,QAAQD,UAAS;AAEvB,WAAO,MAAM;AAAA,EACf;AACF;AAuBO,IAAM,cAA2B,mBAAmB;",
  "names": ["React", "import_react", "import_react", "useReduxContext", "useStore", "useStore", "useDispatch"]
}
